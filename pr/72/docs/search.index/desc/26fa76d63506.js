rd_("AjOnly the Node ID is added.AjContains the success valueAmOn disk storage for replicas.BnGet the <code>AuthorId</code> for this author.CdGet the <code>NamespaceId</code> for this namespace.DbGet the <code>NamespaceId</code> for this <code>Capability</code>.CkGet the namespace identifier for this <code>Replica</code>.CeGet the <code>RecordIdentifier</code> for this entry.BdReturns the document id of this doc.A`Matches any key.AcMatches any author.nSort ascendingoDocument handleAhContains the error valueoMemory storage.AbQuery all records.BnCreate a new iterator over all content hashes.Bgirpc-based RPC implementation for docs.BgReturns the API for this docs instance.EeDeletes entries that match the given <code>author</code> and key <code>prefix</code>.B`Get the timestamp for an author.AoGet the current default author.AiGet the key of the entry.AjGet the key of this entry.AkGet the key of this record.AdThe key of the entryBaNumber of author-timestamp pairs.C`Network implementation of the iroh-docs protocolAgCreate a new doc ticketCcCreate a new <code>Author</code> with a random key.ClCreate a new <code>NamespaceSecret</code> with a random key.AeCreate a new replica.0AbCreate a new entryBkCreate a new <code>RecordIdentifier</code>.AdCreate a new record.ClCreates a new <code>Docs</code> from an <code>Engine</code>.CiCreates a callback and handler to manage blob protection.ChGet the raw representation of this namespace capability.AgSet the default author.BnThe ALPN identifier for the iroh-docs protocol0oSort descendingnDocs protocol.dDoneAfFailed to open replicaAcA readable replica.BbRead only access to the namespace.AfShare with read accessCmThe entry was received from the remote node identified by \xe2\x80\xa6AbFailed to run sync0AoReturns the argument unchanged.0000000000000000000000000000000000000000000BfPeer that provided the inserted entry.BkThe peer from which we received this entry.22222222222222222B`The peer that sent us the entry.333333333333333333333333333333333333333333333333333333333333333333CeThe content hash of the newly available entry contentBaThe hash of the entry\xe2\x80\x99s contentBaCalls <code>U::from(self)</code>.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000CbCreate an iterator over the entries in this state.AkGet the kind of capability.AdLists all documents.BiLoad the default author from the storage.BeLoad the default author from storage.ChReturns a <code>Doc</code> client for a single document.BgGet the peer\xe2\x80\x99s node ID (if available)AgThe peer we syned with.AcPeer we synced withCaSign a message with this <code>Author</code> key.CjSign a message with this <code>NamespaceSecret</code> key.DlSign this entry with a <code>NamespaceSecret</code> and <code>Author</code>.AeThe size of the entryAjAPI for iroh-docs replicasAkHandle to the actor thread.AgSet sync state to true.CaWhether to accept sync requests for this replica.BfSet to true to set sync state to true.AlWe aborted the sync request.AhAccept the sync request.oFailed to close0BhA single entry in a <code>Replica</code>BmEvent emitted by sync when entries are added.ChMatches if the contained bytes and the key are the same.BnOnly keys that are exactly the provided value.BdMatches exactly the provided author.nFound the blobAoThe entry was inserted locally.BfOther error while opening the replica.DhNote: When using the <code>SingleLatestPerKey</code> query kind, the \xe2\x80\xa6BgIncludes the Node ID and the relay URL.mStorage errorCaManages the replicas and authors for an instance.AcA writable replica.AnWrite access to the namespace.AgShare with write accessCjThis contains an actor spawned on a separate thread to \xe2\x80\xa6BgApply the options to the given address.A`Build the query.0AdCloses the document.BiCreate a tombstone record (empty content)AkGet the <code>Entry</code>.oInserted entry.0AcThe inserted entry.0BfFlush the current transaction, if any.CjStop the live sync for a document and leave the gossip \xe2\x80\xa6BfStops the live sync for this document.CaSet the maximum number of entries to be returned.CkGet the limit for this query (max. number of entries to \xe2\x80\xa6BnMerge this capability with another capability.BnMerge another author head state into this one.AkA list of nodes to contact.BnShares this document with peers over a ticket.EnBuild a <code>Docs</code> protocol given a <code>BlobsStore</code> and <code>Gossip</code> \xe2\x80\xa6AfStart the sync engine.BgSpawn a sync actor and return a handle.BdCreate a new docs API from an engineChStorage trait and implementation for iroh-docs documentsCcA node connected to us and we accepted the exchangeCmAuthor key to insert entries in a <code>crate::Replica</code>CfThe replica is closed, no operations may be performed.CgThe sync engine coordinates actors that manage open \xe2\x80\xa6B`Why we performed a sync exchangeCgMatches if the contained bytes are a prefix of the key.BlAll keys that start with the provided value.CdThe data part of an entry in a <code>Replica</code>.AhDecline the sync requestCnWe received a sync report while a sync was running, so run \xe2\x80\xa6BgFields by which the query can be sortedAaFilter by author.DcCreate a <code>Query::all</code> query filtered by a single author.BlGet the <code>AuthorId</code> of this entry.CkGet the <code>AuthorId</code> of this record as byte array.BfReturns true if the replica is closed.AgCreates a new document.CnDecode from byte slice created with <code>Self::encode</code>.C`Serialize this entry into its canonical byte \xe2\x80\xa6BmEncode into a byte array with a limited size.CaHandlers and actors to for live syncing replicas.CkImports a document from a ticket and joins all peers in \xe2\x80\xa6BeInsert a new record at the given key.AgInsert a new timestamp.BcListen for incoming RPC connectionsAmCreate a new store in memory.DeCreate a new <code>Builder</code> for the docs protocol, using in \xe2\x80\xa6ClSet the offset within the result set from where to start \xe2\x80\xa6ClGet the offset for this query (number of entries to skip \xe2\x80\xa6AkOrigin of the sync exchangeCdGet the <code>Record</code> contained in this entry.AlResult of the sync operationBeReturns status info for this documentCmSerialize this entry into a new vector with its canonical \xe2\x80\xa6DiStrictly verify a signature on a message with this <code>Author</code>\xe2\x80\xa6DfVerify that a signature matches the <code>msg</code> bytes and was \xe2\x80\xa6CfStrictly verify a signature on a message with this \xe2\x80\xa61BdVerify the signatures on this entry.DkVerify that this signature was created by signing the <code>entry</code>\xe2\x80\xa6hAll doneAnBuilder for the docs protocol.AnFailed to establish connection0AiWe initiated the exchangeB`API wrapper for the docs serviceAeMetrics for iroh-docsAgThe content is missing.CeLocal representation of a mutable, synchronizable \xe2\x80\xa6AjTime a sync operation tookAlTime to establish connectionB`Connect to a remote docs serviceAgReturns a single entry.CfBy how many handles the replica is currently held openClCheck if an entry should be downloaded according to this \xe2\x80\xa6C`Verifies whether this filter matches a given keyChTest if a key is matched by this <code>KeyFilter</code>.CoTest if an author is matched by this <code>AuthorFilter</code>.;BlReturns the metrics tracked for this engine.CaReturns the metrics collected in this sync actor.BaThe outcome of the sync operationAjSave a new default author.AiTime to run sync exchangeAkSet the sort for the query.B`Timestamp when the sync finishedAlThe time this operation tookBe<code>AuthorPublicKey</code> in bytesBdThe content is completely available.CgThe namespace did not exist before and is now inserted.CkThe namespace existed and its capability remains unchanged.AkThe replica does not exist.AkNamespace is not available.AoOptions when opening a replica.hProgressAeReplica is read only.DjError that occurs trying to access the <code>NamespaceSecret</code> of \xe2\x80\xa6CiThe namespace existed and now has an upgraded capability.CjGet the byte representation of this <code>AuthorId</code>.CmGet the byte representation of this <code>NamespaceId</code>.AfConvert to byte slice.0C`Get this <code>RecordIdentifier</code> as Bytes.BgDeletes a document from the local node.Bi<code>Endpoint</code> used by the engine.AoTimestamp when the sync startedCmCreate a <code>Capability</code> from its raw representation.BjGet an iterator over entries of a replica.BgReturns all entries matching the query.BoReturn <code>true</code> if the entry is empty.BoWhether this <code>AuthorHeads</code> is empty.AnNumber of entries we received.AjNumber of entries we sent.Dm<code>ProtocolHandler</code> implementation for the docs <code>Engine</code>.BhProtocol definitions for irpc-based RPC.CeSets an entry on the doc via its key, hash, and size.AdShutdown the engine.BiGet a read-only snapshot of the database.CdReturns the <code>Author</code> byte representation.CmReturns the <code>NamespaceSecret</code> byte representation.AfConvert to byte array.0BnIncludes the Node ID and the direct addresses.AiSort by author, then key.CfContains both a key (either secret or public) to a \xe2\x80\xa6BiQuery on all entries without aggregation.AiSort by key, then author.mKey matching.CiEvents informing about actions of the live sync progress.CbError return from <code>Store::open_replica</code>AnThe state for an open replica.AjMode for sharing documentsBmEvent emitted when a sync operation completesCmConvert to a hex string limited to the first 10 bytes for \xe2\x80\xa60AoGet an entry by key and author.BfReturns an entry for a key and author.iiroh-docsCaGet the key of this record as <code>Bytes</code>.AjFilter by exact key match.D`Create a <code>Query::all</code> query filtered by a single key.BoGet the <code>NamespaceId</code> of this entry.CnGet the <code>NamespaceId</code> of this record as byte array.BiDocument in which the entry was inserted.0B`Get the namespace (if available)AnThe namespace that was synced.CdCreate a new empty entry with the current timestamp.C`Get the identifier for an entry in this replica.BjSets the content of a key to a byte array.AbGet the signature.AkSubscribe to insert events.BnSubscribe to replica and sync progress events.AlSubscribe to replica events.BgOptionally subscribe to replica events.BgSubscribes to events for this document.AoGet the timestamp of the entry.B`Get the timestamp of the record.BaGet the timestamp of this record.B`The capability of the namespace.AkDirect join request via APIBjFilter strategy used in download policies.BcThe content is partially available.BdWe have a new neighbor in the swarm.AnFile based persistent storage.DgThe <code>SyncHandle</code> controls an actor thread which executes \xe2\x80\xa6AmWhy we started a sync requestCjWe synced after receiving a sync report that indicated \xe2\x80\xa6AbValidation failureDdConvert a <code>AuthorId</code> into a <code>AuthorPublicKey</code>.0AcGet the blob store.Aneither a public or private keyCmGet the <code>Capability</code> of this <code>Replica</code>.C`Create an <code>Author</code> from a byte array.AmCreate from a slice of bytes.ChCreate a <code>NamespaceSecret</code> from a byte array.1CjCreate a new signed entry by signing an entry with the \xe2\x80\xa6CgCreate a new signature by signing an entry with the \xe2\x80\xa6BkCreate a new signed entries from its parts.BaGet an author key from the store.AeFilter by key prefix.D`Create a <code>Query::all</code> query filtered by a key prefix.CdCreate a new author key and persist it in the store.DcCreate or open a store from a <code>path</code> to a database file.DdCreate a new <code>Builder</code> for the docs protocol, using a \xe2\x80\xa6CeGet the <code>AuthorPublicKey</code> for this author.CkGet the <code>NamespacePublicKey</code> for this namespace.DcConvert into <code>NamespacePublicKey</code> by fetching from a \xe2\x80\xa6D`Convert into <code>AuthorPublicKey</code> by fetching from a \xe2\x80\xa6CgConvert a byte array into a  <code>VerifyingKey</code>.EfGet the <code>NamespaceSecret</code> of this <code>Capability</code>. Will fail if \xe2\x80\xa6DkGet the byte representation of the <code>NamespaceSecret</code> key for \xe2\x80\xa6AiStart to sync a document.CbStarts to sync this document with a list of peers.BoReason why we aborted an incoming sync request.CcErrors that may occur on handling incoming sync \xe2\x80\xa6BoTimestamps of the latest entry for each author.0BjMessage enum for <code>DocsProtocol</code>DgError emitted when inserting entries into a <code>Replica</code> failedAbA local insertion.AmA local entry has been added.Bh<code>NamespacePublicKey</code> in bytesCbPeer showed up as new neighbor in the gossip swarmDhByte representation of a <code>PeerId</code> from <code>iroh-net</code>.BiThe remote peer aborted the sync request.BlIn memory information about an open replica.oA signed entry.AlOutcome of a sync operation.CfLists document authors for which we have a secret key.BdGet the content length of the entry.BeGet the content length of the record.CkGet the length of the data addressed by this record\xe2\x80\x99s \xe2\x80\xa6CdExports an entry as a file to a given absolute path.CgMakes sure that all pending database operations are \xe2\x80\xa6BhAdds an entry from an absolute file pathCoCreate a new <code>Record</code> with the timestamp set to now.DgCreate a new replica for <code>namespace</code> and persist in this \xe2\x80\xa6BbGet the parent span of the messageBeHow many event subscriptions are openB`Explicitly unsubscribe a sender.A`Author matching.AkEntry signature is invalid.C`Errors that may occur on outgoing sync requests.CeThe content of an entry was downloaded and is now \xe2\x80\xa6BcAttempted to insert an empty entry.CjWhether an entry was inserted locally or by a remote peer.AiReceived a remote insert.B`We lost a neighbor in the swarm.BeA query builder for document queries.CkAn iterator over a range of entries from the records table.AnA remote entry has been added.BcA set-reconciliation sync finished.BeDetails of a finished sync operation.BcGet the author bytes of this entry.BoGet the content <code>Hash</code> of the entry.BcGet the content hash of the record.CmGet the <code>Hash</code> of the content data of this record.CgCan this state offer newer stuff to <code>other</code>?BcList all author keys in this store.AoOpen a replica from this store.ChWhether we want to accept or reject an incoming sync \xe2\x80\xa6CbWhether the content status is available on a node.BlPersistent default author for a docs engine.ChDo not download any key unless it matches one of the \xe2\x80\xa6nSort directionDkA wrapper around <code>Store</code> for a specific <code>NamespaceId</code>DaGet this <code>RecordIdentifier</code> as a tuple of byte slices.AnCreates a new document author.AoDeletes the given author by id.AiExports the given author.AiImports the given author.A`Close a replica.AaDelete an author.EdDelete entries that match the given <code>author</code> and key <code>prefix</code>.ChCreate a tombstone record with the timestamp set to now.AjImport an author key pair.CaCall to include empty entries (deletion markers).DiConvert an iterator of anything into <code>FallibleIterator</code> by \xe2\x80\xa6000DjConvert a <code>NamespaceId</code> into a <code>NamespacePublicKey</code>.0CkGet this <code>RecordIdentifier</code> as a tuple of bytes.Ck<code>ToString::to_string</code>, but without panic on OOM.00000000000000000BfWe are already syncing this namespace.BdKind of capability of the namespace.CjDownload policy to decide which content blobs shall be \xe2\x80\xa6AhSignature over an entry.BaProgress during import operationsBjIterator over the latest entry per author.ClIterator over parent entries, i.e. entries with the same \xe2\x80\xa6ChStore trait for expanded public keys for authors and \xe2\x80\xa6CaReturns the default document author of this node.CdGet all content hashes of all replicas in the store.BmIf the content is available at the local nodeBnThe persistent default author for this engine.CcGet the peers that have been useful for a document.BdReturns sync peers for this documentClTimestamp of the latest entry for each author in the set \xe2\x80\xa6AaRemove a replica.C`Get an owned read-only snapshot of the database.BfSet the order direction for the query.ClValidate that the entry has the empty hash if the length \xe2\x80\xa60DgOptions to configure what is included in a <code>iroh::NodeAddr</code>.BeIdentifier for an <code>Author</code>B`Errors for capability operationsBoNamespace key of a <code>crate::Replica</code>.CeProtocol message for the set reconciliation protocol.BjNumber of times the main actor loop tickedDiCheck if a <code>AuthorHeads</code> contains entry timestamps that we \xe2\x80\xa6BeHashes the given data and inserts it.BmConvert into <code>NamespacePublicKey</code>.BjConvert into <code>AuthorPublicKey</code>.BjList all replica namespaces in this store.ChSet the garbage collection protection handler for blobs.CgWhether download policies require the content to be \xe2\x80\xa6ChDownload every key unless it matches one of the filters.CcEntry namespace does not match the current replica.CkA newer entry exists for either this entry\xe2\x80\x99s key or a \xe2\x80\xa6AkThe identifier of a record.BdConnect to a peer and sync a replicaAoImport a new replica namespace.BoImports a document from a namespace capability.AcMerge a capability.CdOutcome of a <code>Doc::import_file</code> operationCkEntry has length 0 but not the empty hash, or the empty \xe2\x80\xa6AeIn-memory key storageAkNamespaces are not the sameChIncludes the Node ID and both the relay URL, and the \xe2\x80\xa6BiEntry timestamp is too far in the future.BbReason why entry validation failedCfHandle an iroh-docs connection and sync all shared \xe2\x80\xa6BhHandle an incoming iroh-docs connection.BeLoad the replica info from the store.BhNumber of document entries added locallyBlGet the number of current event subscribers.EfThe corresponding <code>VerifyingKey</code> for a <code>NamespaceSecret</code>. It \xe2\x80\xa6BbSets the node-wide default author.BjNumber of times the live actor loop tickedBiNumber of document entries added by peersCkStore that gives read access to download policies for a \xe2\x80\xa6CgWe experienced an error while trying to provide the \xe2\x80\xa6BaAll pending content is now ready.CgNumber of times the live actor processed an actor eventBgGet the download policy for a document.BhGet the download policy for a namespace.BmReturns the download policy for this documentCmInsert an entry into this replica which was received from \xe2\x80\xa6BhSet the download policy for a namespace.BjSets the download policy for this documentBdWhere to persist the default author.BlNumber of times the gossip actor loop tickedClImports a document from a ticket, creates a subscription \xe2\x80\xa6ChRegister a peer that has been useful to sync a document.CnCreate the initial message for the set reconciliation flow \xe2\x80\xa6ChProcess a set reconciliation message from a remote peer.AoIterator for all content hashesCjCallback that may be set on a replica to determine the \xe2\x80\xa6CiNumber of times the gossip actor processed an actor eventCcNumber of times the gossip actor processed an eventDd<code>ContentStatus</code> for this entry in the remote\xe2\x80\x99s replica.CmWhether the peer claims to have the content blob for this \xe2\x80\xa6ClQuery only the latest entry for each key, omitting older \xe2\x80\xa6BoOutcome of <code>Store::import_namespace</code>BlThe handler for a blobs protection callback.BjTotal size of entry contents added locallyClQuery that only returns the latest entry for a key which \xe2\x80\xa6BkTotal size of entry contents added by peersBcNumber of failed syncs (via accept)BgNumber of successful syncs (via accept)EeConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by \xe2\x80\xa6000BdNumber of failed syncs (via connect)BhNumber of successful syncs (via connect)CkMax time in the future from our wall clock time that we \xe2\x80\xa6CdGet the latest entry for each author in a namespace.ChNumber of times the live actor processed a replica eventB`Set the content status callback.CiNumber of times the gossip actor processed a pending joinCkNumber of times the live actor processed a pending downloadCkNumber of times the live actor processed a running sync \xe2\x80\xa60")